{"version":3,"file":"css/frontend.css","mappings":";;;AACA;;;;;;;;;;;;EAAA;AAoBA;ACrBA;iEAAA;AAGI;EACI;ADcR;ACbQ;EACI;ADeZ;;AEpBA;;EAEI;AFuBJ;AErBI;;EACI;AFwBR;;AEnBA;;;EAGI;EACA;AFsBJ;AEpBI;;;EACI;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AFwBR;;AGlDA;EACI;EACA;EACA;AHqDJ;AGnDI;EACI;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AHqDR;;AIvEA;EACI;EACA;EACA;AJ0EJ;AIxEI;EALJ;IAMQ;EJ2EN;AACF;AIzEI;EACI;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AJ2ER;AIzEQ;EAXJ;IAYQ;EJ4EV;AACF;AIvEY;EADJ;IAEQ;EJ0Ed;AACF;AIvEQ;EACI;EACA;EACA;EACA;AJyEZ;AIvEY;EANJ;IAOQ;IACA;EJ0Ed;AACF;;AKlHA;EACI;EACA;ALqHJ;;AKjHA;EACI;EACA;ALoHJ;AKjHQ;EACI;ALmHZ;AKhHQ;EACI;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;ALkHZ;;AK5GI;EACI;EACA;EACA;EACA;AL+GR;AMrFI;ED9BA;IAOQ;ELgHV;AACF;AK9GQ;EACI;EACA;EACA;EACA;EACA;ALgHZ;AK9GY;EACI;ALgHhB;;AKzGA;;EAEI;AL4GJ;;AOxKA;iEAAA;AAGC;EACC;EACA;AP0KF;AOvKC;EACC;EACA;APyKF;AOvKE;EACC;APyKH;;AAzJA;AQzBQ;;;EACI;ARwLZ,C","sources":["webpack://wecodeart/./src/scss/frontend.scss","webpack://wecodeart/./src/scss/components/_header.scss","webpack://wecodeart/./src/scss/components/_buttons.scss","webpack://wecodeart/./src/scss/components/_cover.scss","webpack://wecodeart/./src/scss/components/_media-text.scss","webpack://wecodeart/./src/scss/components/_misc.scss","webpack://wecodeart/./node_modules/bootstrap/scss/mixins/_breakpoints.scss","webpack://wecodeart/./src/scss/components/_footer.scss","webpack://wecodeart/./src/scss/pages/_blog.scss"],"sourcesContent":["@charset \"UTF-8\";\r\n/*!\r\nTheme Name: WeCodeArt Honey Skin\r\nTheme URI: https://www.wecodeart.com/\r\nTemplate: wecodeart\r\nAuthor: Bican Marian Valeriu\r\nAuthor URI: https://www.wecodeart.com/about/\r\nDescription: WeCodeArt Child Theme used on main website.\r\nVersion: 1.0.0\r\nLicense: TBA\r\nLicense URI: TBA\r\nTags: light, dark, two-columns, right-sidebar, responsive-layout, accessibility-ready\r\nText Domain: wecodeart-honey\r\n!*/\r\n\r\n// Required\r\n@import \"~bootstrap/scss/functions\";\r\n@import \"~bootstrap/scss/variables\";\r\n@import \"~bootstrap/scss/mixins\";\r\n@import \"./abstracts/root\";\r\n\r\n/* Custom Components */\r\n@import 'components/header';\r\n@import 'components/buttons';\r\n@import 'components/cover';\r\n@import 'components/media-text';\r\n@import 'components/misc';\r\n@import 'components/footer';\r\n\r\n/* Pages */\r\n@import 'pages/blog';","/* \t= Header Area\r\n--------------------------------------------------------------- */\r\n.wp-site-header {\r\n    .wp-block-navigation {\r\n        padding: 0;\r\n        .dropdown-menu:not(.dropdown-menu-dark) {\r\n            border-color: var(--wp--preset--color--light);\r\n        }\r\n    }\r\n}\r\n","// General\n.wc-block-components-button,\n.wp-block-button__link {\n    box-shadow: 0 5px 10px rgba( black, .05 );\n\n    &:hover {\n        box-shadow: none;\n    }\n}\n\n// Cart & Checkout\n.wc-block-cart__submit-button,\n.wc-block-mini-cart__footer-checkout,\n.wc-block-components-checkout-place-order-button {\n    position: relative;\n    font-size: var(--wp--preset--font-size--small);\n\n    &::before {\n        content: '';\n        display: inline-block;\n        width: 1.125em;\n        height: 1.125em;\n        background-image: var(--wc--checkout);\n        background-repeat: no-repeat;\n        background-position: center;\n        margin-right: .5rem;\n        vertical-align: -.125em;\n    }\n}",".wp-block-cover.is-style-top {\n    border-bottom: 1px solid var(--wp--preset--color--secondary);\n    padding: 3rem var(--wp--custom--gutter);\n    overflow: visible;\n\n    &::after {\n        content: '';\n        position: absolute;\n        width: calc(100% - 2 * var(--wp--custom--gutter));\n        max-width: var(--wp--style--global--content-size);\n        bottom: 0;\n        left: var(--wp--custom--gutter);\n        right: var(--wp--custom--gutter);\n        margin: 0 auto;\n        height: 6px;\n        transform: translateY(50%);\n        border-radius: 4px;\n        background: var(--wp--preset--color--secondary);\n        z-index: 5;\n    }\n}",".wp-block-media-text.is-style-overlap {\n    position: relative;\n    background-color: transparent;\n    gap: 0;\n\n    @media (max-width: 991.7px) {\n        flex-direction: column;\n    }\n\n    &::before {\n        position: absolute;\n        top: 0;\n        right: 0;\n        height: 100%;\n        width: 180px;\n        background-image: url('./../../images/honey-splash.png');\n        background-size: contain;\n        background-repeat: no-repeat;\n        z-index: 2;\n        \n        @media (min-width: 992px) {\n            content: '';\n        }\n    }\n\n    .wp-block-media-text {\n        &__media {\n            @media (max-width: 991.7px) {\n                margin-bottom: 1.5rem;\n            }\n        }\n\n        &__content {\n            border-radius: 10px;\n            padding: 2rem 1.5rem 1.5rem;\n            background-color: var(--wp--preset--color--light);\n            z-index: 1;\n\n            @media (min-width: 992px) {\n                padding: 2rem 2.5rem 1.5rem;\n                transform: translateX(-2.5rem);\n            }\n        }\n    }\n}","// Core\n.wp-site-blocks {\n    max-width: 1920px;\n    margin: 0 auto;\n}\n\n// Styles\n.is-style-check {\n    list-style: none;\n    padding-left: 0;\n\n    li {\n        .is-root-container & {\n            display: flex;\n        }\n        \n        &::before {\n            content: '';\n            display: inline-block;\n            margin-right: 1em;\n            padding: .25em;\n            width: 1.5em;\n            height: 1.5em;\n            line-height: 1;\n            text-align: center;\n            vertical-align: middle;\n            background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' xml:space='preserve' viewBox='0 0 490.05 490.05'%3E%3Cpath fill='%23FFD832' d='M418.275 418.275c95.7-95.7 95.7-250.8 0-346.5s-250.8-95.7-346.5 0-95.7 250.8 0 346.5 250.9 95.7 346.5 0zm-261.1-210.7 55.1 55.1 120.7-120.6 42.7 42.7-120.6 120.6-42.8 42.7-42.7-42.7-55.1-55.1 42.7-42.7z'/%3E%3C/svg%3E\");\n            background-size: contain;\n        }\n    }\n}\n\n.is-style-horizontal {\n    .wc-block-review-list {\n        display: flex;\n        flex-direction: column;\n        gap: 1rem;\n        margin-bottom: 0;\n\n        @include media-breakpoint-up( 'md' ) {\n            flex-direction: row;\n        }\n\n        &-item__item {\n            flex: 1 0 0%;\n            background-color: white;\n            border-radius: .25rem;\n            padding: 10px;\n            margin: 0;\n\n            & + li {\n                margin: 0;\n            }\n        }\n    }\n}\n\n// Crumbs\n.woocommerce-breadcrumb a:not(:hover),\n.yoast-breadcrumbs {\n    color: var(--wp--gray-600);\n}","// Breakpoint viewport sizes and media queries.\n//\n// Breakpoints are defined as a map of (name: minimum width), order from small to large:\n//\n//    (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px)\n//\n// The map defined in the `$grid-breakpoints` global variable is used as the `$breakpoints` argument by default.\n\n// Name of the next breakpoint, or null for the last breakpoint.\n//\n//    >> breakpoint-next(sm)\n//    md\n//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px))\n//    md\n//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl xxl))\n//    md\n@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {\n  $n: index($breakpoint-names, $name);\n  @if not $n {\n    @error \"breakpoint `#{$name}` not found in `#{$breakpoints}`\";\n  }\n  @return if($n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);\n}\n\n// Minimum breakpoint width. Null for the smallest (first) breakpoint.\n//\n//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px))\n//    576px\n@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {\n  $min: map-get($breakpoints, $name);\n  @return if($min != 0, $min, null);\n}\n\n// Maximum breakpoint width.\n// The maximum value is reduced by 0.02px to work around the limitations of\n// `min-` and `max-` prefixes and viewports with fractional widths.\n// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max\n// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.\n// See https://bugs.webkit.org/show_bug.cgi?id=178261\n//\n//    >> breakpoint-max(md, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px))\n//    767.98px\n@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {\n  $max: map-get($breakpoints, $name);\n  @return if($max and $max > 0, $max - .02, null);\n}\n\n// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front.\n// Useful for making responsive utilities.\n//\n//    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px))\n//    \"\"  (Returns a blank string)\n//    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px, xxl: 1400px))\n//    \"-sm\"\n@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {\n  @return if(breakpoint-min($name, $breakpoints) == null, \"\", \"-#{$name}\");\n}\n\n// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\n// Makes the @content apply to the given breakpoint and wider.\n@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  @if $min {\n    @media (min-width: $min) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media of at most the maximum breakpoint width. No query for the largest breakpoint.\n// Makes the @content apply to the given breakpoint and narrower.\n@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {\n  $max: breakpoint-max($name, $breakpoints);\n  @if $max {\n    @media (max-width: $max) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media that spans multiple breakpoint widths.\n// Makes the @content apply between the min and max breakpoints\n@mixin media-breakpoint-between($lower, $upper, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($lower, $breakpoints);\n  $max: breakpoint-max($upper, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($lower, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($upper, $breakpoints) {\n      @content;\n    }\n  }\n}\n\n// Media between the breakpoint's minimum and maximum widths.\n// No minimum for the smallest breakpoint, and no maximum for the largest one.\n// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.\n@mixin media-breakpoint-only($name, $breakpoints: $grid-breakpoints) {\n  $min:  breakpoint-min($name, $breakpoints);\n  $next: breakpoint-next($name, $breakpoints);\n  $max:  breakpoint-max($next, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($name, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($next, $breakpoints) {\n      @content;\n    }\n  }\n}\n","/* \t= Footer Area\r\n--------------------------------------------------------------- */\r\n.wp-site-footer {\r\n\t:is(h1, h2, h3, h4, h5, h6) {\r\n\t\tfont-size: 1.5rem;\r\n\t\tfont-weight: 700;\r\n\t}\r\n\r\n\t.wp-block-navigation {\r\n\t\tpadding: 0;\r\n\t\talign-items: flex-start;\r\n\r\n\t\t.navbar-nav {\r\n\t\t\tmin-width: 180px;\r\n\t\t}\r\n\t}\r\n}",".blog,\r\n.archive,\r\n.wp-block-post {\r\n    .wp-block-post-featured-image {\r\n        & + .wp-block-group {\r\n            justify-content: center;\r\n        }\r\n    }\r\n}"],"names":[],"sourceRoot":""}